/**
 * List 集合
 *   具有3个常见的子类对象
 *   ArrayList  LinkList   Vector
 *   因为他们底层的数据结构不一样 单独的封装了一个实体  他们底层到底是对这些数据怎么存储的呢
 *
 *
 *   ArrayList-1.2；底层的数据结构使用的是数据结构  里面每个元素都有角标   特点是查询速度很快  修改也快 增加  删除 有些麻烦  因为在某个位置插入元素的话  其他位置的元素都能跟着变  线程不同步  效率高
 *                  元素不多 感觉不出来   元素越多  体会越明显
 *   LinkList : 底层的数据结构使用的是链表结构   每个元素记住他的前一个和后一个元素   特点-查询慢  因为依次往下找   增删快  每一种数据结构对元素的操作都不一样 各有特点
 *
 *   Vector-1.0 ： 底层是数组数据结构  那不重复了 确实重复了  出现的时候集合框架都不在  1.2才出现    Vector是线程同步的  无论增删 查询 都超慢  被Arraylist 替代了  那多线程的时候可以自己加锁  也不用
 *
 *    java集合当中 专门提供了一个帮你加锁的   把你的不安全的给我  我给你一个安全的
 *
 *    对于ArrayList 和 Vector  他们都是数组结构的   数组是固定长度的   而集合是可变长度的
 *
 *    ArrayList 默认长度是10  超过长度  在new一个数组   50%的延长  把原来的数组copy到新数组中来  再把要添加的元素 添加到新数组当中  可变长度数组
 *    Vector                                           100%的延长  比较浪费空间  而ArrayList的是50%刚好
 */
public class ListDemo {




}
